{"version":3,"file":"enrol-select.min.js","sources":["../src/enrol-select.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Connect course select box with enrol methods select box\n *\n * @copyright  2022 Matthias Tylkowski <matthias.tylkowski@b-tu.de>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getEnrolmentMethods} from './repository';\nimport Selectors from './local/enrol-select/selectors';\n\nconst registerEventListeners = (defaultSelected) => {\n  const sourceSelectElem = document.querySelector(Selectors.selectors.sourceSelector);\n  const targetSelectElem = document.querySelector(Selectors.selectors.targetSelector);\n\n  if (!sourceSelectElem || !targetSelectElem) {\n    throw new Error('source or target select element could not be found');\n  }\n\n  sourceSelectElem.addEventListener('change', e => {\n    const targetCourseId = e.target.value;\n    updateSelectOptions(targetSelectElem, targetCourseId, defaultSelected);\n  });\n\n  updateSelectOptions(targetSelectElem, sourceSelectElem.value, defaultSelected);\n};\n\n/**\n * Update the <select> element with custom data\n * @param {HTMLSelectElement} targetSelectElement\n * @param {number} targetCourseId\n * @param {number} defaultSelected enrolment id which is selected by default, if available\n */\nconst updateSelectOptions = async(targetSelectElement, targetCourseId, defaultSelected) => {\n  const data = await getEnrolmentMethods(targetCourseId);\n\n  // Clear existing options.\n  targetSelectElement.options.length = 0;\n  addOptions(data, targetSelectElement, defaultSelected);\n};\n\n/**\n * Add Options from data to the selectElement\n * @param {Array<{id: string, name: string}>} data\n * @param {HTMLSelectElement} selectElement\n * @param {number} defaultSelected\n */\nconst addOptions = (data, selectElement, defaultSelected) => {\n  const collator = new Intl.Collator('de-DE');\n\n  data.sort((a, b) => collator.compare(a.name, b.name));\n\n  for (const item of data) {\n    const option = new Option(item.name, item.id, undefined, item.id === defaultSelected);\n    selectElement.add(option);\n  }\n};\n\n/**\n * Initialize Module\n * @param {number} defaultSelected enrolment id to preselect\n */\nexport const init = (defaultSelected) => {\n  registerEventListeners(defaultSelected);\n};\n"],"names":["updateSelectOptions","async","targetSelectElement","targetCourseId","defaultSelected","data","options","length","addOptions","selectElement","collator","Intl","Collator","sort","a","b","compare","name","item","option","Option","id","undefined","add","sourceSelectElem","document","querySelector","Selectors","selectors","sourceSelector","targetSelectElem","targetSelector","Error","addEventListener","e","target","value","registerEventListeners"],"mappings":";;;;;;sJA+CMA,oBAAsBC,MAAMC,oBAAqBC,eAAgBC,yBAC/DC,WAAa,mCAAoBF,gBAGvCD,oBAAoBI,QAAQC,OAAS,EACrCC,WAAWH,KAAMH,oBAAqBE,kBASlCI,WAAa,CAACH,KAAMI,cAAeL,yBACjCM,SAAW,IAAIC,KAAKC,SAAS,SAEnCP,KAAKQ,MAAK,CAACC,EAAGC,IAAML,SAASM,QAAQF,EAAEG,KAAMF,EAAEE,YAE1C,MAAMC,QAAQb,KAAM,OACjBc,OAAS,IAAIC,OAAOF,KAAKD,KAAMC,KAAKG,QAAIC,EAAWJ,KAAKG,KAAOjB,iBACrEK,cAAcc,IAAIJ,wBAQDf,kBAnDWA,CAAAA,wBACxBoB,iBAAmBC,SAASC,cAAcC,mBAAUC,UAAUC,gBAC9DC,iBAAmBL,SAASC,cAAcC,mBAAUC,UAAUG,oBAE/DP,mBAAqBM,uBAClB,IAAIE,MAAM,sDAGlBR,iBAAiBS,iBAAiB,UAAUC,UACpC/B,eAAiB+B,EAAEC,OAAOC,MAChCpC,oBAAoB8B,iBAAkB3B,eAAgBC,oBAGxDJ,oBAAoB8B,iBAAkBN,iBAAiBY,MAAOhC,kBAuC9DiC,CAAuBjC"}