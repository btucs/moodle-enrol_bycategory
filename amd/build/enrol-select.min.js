define("enrol_bycategory/enrol-select",["exports","./repository","./local/enrol-select/selectors"],(function(_exports,_repository,_selectors){var obj;
/**
   * Connect course select box with enrol methods select box
   *
   * @copyright  2022 Matthias Tylkowski <matthias.tylkowski@b-tu.de>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_selectors=(obj=_selectors)&&obj.__esModule?obj:{default:obj};const updateSelectOptions=async(targetSelectElement,targetCourseId,defaultSelected)=>{const data=await(0,_repository.getEnrolmentMethods)(targetCourseId);targetSelectElement.options.length=0,addOptions(data,targetSelectElement,defaultSelected)},addOptions=(data,selectElement,defaultSelected)=>{const collator=new Intl.Collator("de-DE");data.sort(((a,b)=>collator.compare(a.name,b.name)));for(const item of data){const option=new Option(item.name,item.id,void 0,item.id===defaultSelected);selectElement.add(option)}};_exports.init=defaultSelected=>{(defaultSelected=>{const sourceSelectElem=document.querySelector(_selectors.default.selectors.sourceSelector),targetSelectElem=document.querySelector(_selectors.default.selectors.targetSelector);if(!sourceSelectElem||!targetSelectElem)throw new Error("source or target select element could not be found");sourceSelectElem.addEventListener("change",(e=>{const targetCourseId=e.target.value;updateSelectOptions(targetSelectElem,targetCourseId,defaultSelected)})),updateSelectOptions(targetSelectElem,sourceSelectElem.value,defaultSelected)})(defaultSelected)}}));

//# sourceMappingURL=enrol-select.min.js.map